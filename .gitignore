#######################
# GitHub Pages Things #
#######################
# keep-sorted start

.sass-cache/
.tool-versions
# Additional Ruby/bundler ignore for when you run: bundle install
/vendor
_site/

# keep-sorted end
#############
# Go Things #
#############
# keep-sorted start

# Dependency directories (remove the comment below to include it)
# vendor/

*.dll
*.dylib
# Binaries for programs and plugins
*.exe
*.exe~
# Output of the go coverage tool, specifically when used with LiteIDE
*.out
*.so
# Test binary, built with `go test -c`
*.test
# Go workspace file
go.work
go.work.sum
main

# keep-sorted end
#################
# Goland Things #
#################

.idea

###############
# Hugo Things #
###############
# keep-sorted start

.hugo_build.lock
# Temporary lock file while building
/.hugo_build.lock
/assets/jsconfig.json
# Generated files by hugo
/public/
/resources/_gen/
hugo.darwin
# Executable may be added to repository
hugo.exe
hugo.linux
hugo_stats.json

# keep-sorted end
###############
# Mise Things #
###############

.mise.local.toml

###############
# Node Things #
###############
# keep-sorted start

# vitepress cache directory
**/.vitepress/cache
# vitepress build output
**/.vitepress/dist
*.lcov
*.log
*.pid
*.pid.lock
*.seed
# Output of 'npm pack'
*.tgz
# TypeScript cache
*.tsbuildinfo
*node_modules/
# parcel-bundler cache (https://parceljs.org/)
.cache
# Gatsby files
.cache/
# Docusaurus cache and generated files
.docusaurus
# DynamoDB Local files
.dynamodb/
# dotenv environment variable files
.env
.env.development.local
.env.local
.env.production.local
.env.test.local
.envrc*
# Optional eslint cache
.eslintcache
# FuseBox cache
.fusebox/
# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt
# node-waf configuration
.lock-wscript
# Next.js build output
.next
# Optional REPL history
.node_repl_history
# Optional npm cache directory
.npm
# Nuxt.js build / generate output
.nuxt
# nyc test coverage
.nyc_output
.parcel-cache
.pnp.*
.pnpm-debug.log*
# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/
# Serverless directories
.serverless/
# Optional stylelint cache
.stylelintcache
# vuepress v2.x temp and cache directory
.temp
# TernJS port file
.tern-port
# vuepress build output
.vuepress/dist
# Yarn Integrity file
.yarn-integrity
.yarn/build-state.yml
# yarn v2
.yarn/cache
.yarn/install-state.gz
.yarn/unplugged
# Bower dependency directory (https://bower.io/)
bower_components
# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release
# Coverage directory used by tools like istanbul
coverage
dist
jspm_packages/
lerna-debug.log*
# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov
# Logs
logs
# Dependency directories
node_modules/
npm-debug.log*
out
package-lock.json
# Runtime data
pids
public/
# Diagnostic reports (https://nodejs.org/api/report.html)
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json
resources/
# Snowpack dependency directory (https://snowpack.dev/)
web_modules/
yarn-debug.log*
yarn-error.log*

# keep-sorted end
#################
# Python Things #
#################

**.venv**

####################
# Terraform Things #
####################
# keep-sorted start

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Local .terraform directories
**/.terraform/*
# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*
*.out*
# .tfstate files
*.tfstate
*.tfstate.*
# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version
# control as they are data points which are potentially sensitive and subject
# to change depending on the environment.
*.tfvars
*.tfvars.json
*_override.tf
*_override.tf.json
*plan.*
# Ignore transient lock info files created by terraform apply
.terraform.tfstate.lock.info
# Ignore CLI configuration files
.terraformrc
crash.*.log
# Crash log files
crash.log
# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
terraform.rc

# keep-sorted end
#################
# VSCode Things #
#################
# keep-sorted start

# But this file could be helpful to others
!.vscode/settings.json
# Stores VSCode versions used for testing VSCode extensions
.vscode-test
# sometimes there is other stuff in here
.vscode/*

# keep-sorted end
